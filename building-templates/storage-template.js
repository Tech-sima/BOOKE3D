/**
 * –®–ê–ë–õ–û–ù –ü–û–ß–¢–´ (STORAGE)
 * –ü–æ–ª–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø–æ—á—Ç—ã –¥–ª—è –≤–Ω–µ–¥—Ä–µ–Ω–∏—è –≤ –Ω–æ–≤—É—é –∫–∞—Ä—Ç—É
 * –í–∫–ª—é—á–∞–µ—Ç —Å–∏—Å—Ç–µ–º—É –¥–æ—Å—Ç–∞–≤–∫–∏ –∏ —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤
 * 
 * –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:
 * 1. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª –≤ HTML
 * 2. –í—ã–∑–æ–≤–∏—Ç–µ initStorageBuilding() –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
 * 3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –∑–æ–Ω—ã –ø–æ–¥ –Ω–æ–≤—É—é –∫–∞—Ä—Ç—É
 */

(function() {
    'use strict';
    
    // === –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ü–û–ß–¢–´ ===
    const STORAGE_CONFIG = {
        name: '–ü–æ—á—Ç–∞',
        type: 'storage',
        icon: 'assets/svg/city-panel/mail.svg',
        // –ö–û–û–†–î–ò–ù–ê–¢–´ –î–õ–Ø –ù–û–í–û–ô –ö–ê–†–¢–´ - –ù–ê–°–¢–†–û–ô–¢–ï –ü–û–î –í–ê–®–£ –ö–ê–†–¢–£
        zone: {
            left: '35%',      // –ü–æ–∑–∏—Ü–∏—è —Å–ª–µ–≤–∞
            top: '45%',       // –ü–æ–∑–∏—Ü–∏—è —Å–≤–µ—Ä—Ö—É
            width: '8%',      // –®–∏—Ä–∏–Ω–∞ –∑–æ–Ω—ã
            height: '12%'     // –í—ã—Å–æ—Ç–∞ –∑–æ–Ω—ã
        },
        // –ë–∞–∑–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        baseIncome: 3000,
        baseUpgradeCost: 8000,
        maxWorkers: 2,
        workerBonus: 0.2, // 20% –±–æ–Ω—É—Å –∑–∞ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞
        purchaseCost: 15000,
        // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ—Å—Ç–∞–≤–∫–∏
        deliveryOrders: [],
        maxDeliveryOrders: 3,
        deliveryTime: 10 // –º–∏–Ω—É—Ç –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫—É
    };
    
    // === –î–ê–ù–ù–´–ï –ü–û–ß–¢–´ ===
    let storageData = {
        level: 1,
        income: STORAGE_CONFIG.baseIncome,
        workers: 0,
        maxWorkers: STORAGE_CONFIG.maxWorkers,
        upgradeCost: STORAGE_CONFIG.baseUpgradeCost,
        lastCollectTime: Date.now(),
        accumulatedProfit: 0,
        isOwned: false,
        purchaseCost: STORAGE_CONFIG.purchaseCost,
        name: STORAGE_CONFIG.name,
        // –î–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç–∞–≤–∫–∏
        deliveryOrders: [],
        currentDelivery: null
    };
    
    // === –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ===
    function initStorageBuilding() {
        console.log('üìÆ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ—á—Ç—ã...');
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        loadStorageData();
        
        // –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é –∑–æ–Ω—É
        createStorageZone();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–∞–Ω–µ–ª—å
        initStoragePanel();
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏—Å—Ç–µ–º—É –¥–æ—Å—Ç–∞–≤–∫–∏
        startDeliverySystem();
        
        console.log('‚úÖ –ü–æ—á—Ç–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
    }
    
    // === –°–û–ó–î–ê–ù–ò–ï –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–û–ô –ó–û–ù–´ ===
    function createStorageZone() {
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –∑–æ–Ω—É –µ—Å–ª–∏ –µ—Å—Ç—å
        const oldZone = document.getElementById('zone-storage');
        if (oldZone) {
            oldZone.remove();
        }
        
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–æ–Ω—É
        const zone = document.createElement('div');
        zone.className = 'building-zone';
        zone.id = 'zone-storage';
        zone.dataset.building = 'storage';
        zone.title = STORAGE_CONFIG.name;
        zone.textContent = '3'; // –ù–æ–º–µ—Ä –∑–¥–∞–Ω–∏—è
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é
        zone.style.left = STORAGE_CONFIG.zone.left;
        zone.style.top = STORAGE_CONFIG.zone.top;
        zone.style.width = STORAGE_CONFIG.zone.width;
        zone.style.height = STORAGE_CONFIG.zone.height;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        zone.addEventListener('click', handleStorageClick);
        zone.addEventListener('touchstart', handleStorageTouch, { passive: true });
        zone.setAttribute('data-handlers-added', 'true');
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–∞—Ä—Ç—ã
        const mapContainer = document.getElementById('map-container');
        if (mapContainer) {
            mapContainer.appendChild(zone);
        }
    }
    
    // === –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –°–û–ë–´–¢–ò–ô ===
    function handleStorageClick(event) {
        event.preventDefault();
        event.stopPropagation();
        
        console.log('üìÆ –ö–ª–∏–∫ –ø–æ –ø–æ—á—Ç–µ');
        
        // –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –ø—Ä–∏–±—ã–ª–∏
        if (window.hideProfitIndicators) {
            window.hideProfitIndicators();
        }
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏—è
        if (window.zoomToBuilding) {
            window.zoomToBuilding('storage', STORAGE_CONFIG.name);
        } else {
            // –ï—Å–ª–∏ –∞–Ω–∏–º–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –æ—Ç–∫—Ä—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª—å –Ω–∞–ø—Ä—è–º—É—é
            openStoragePanel();
        }
    }
    
    function handleStorageTouch(event) {
        event.preventDefault();
        handleStorageClick(event);
    }
    
    // === –ü–ê–ù–ï–õ–¨ –ü–û–ß–¢–´ ===
    function openStoragePanel() {
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é –ø–∞–Ω–µ–ª—å
        if (window.closeBuildingPanel) {
            window.closeBuildingPanel();
        }
        
        // –°–æ–∑–¥–∞–µ–º –ø–∞–Ω–µ–ª—å
        const panel = createStoragePanel();
        document.body.appendChild(panel);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª—å —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
        setTimeout(() => {
            panel.classList.add('show');
        }, 10);
        
        // –°–∫—Ä—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        const mapContainer = document.getElementById('map-container');
        if (mapContainer) {
            mapContainer.style.display = 'none';
        }
    }
    
    function createStoragePanel() {
        const panel = document.createElement('div');
        panel.className = 'building-panel';
        panel.id = 'building-panel';
        
        // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        const accumulatedProfit = calculateAccumulatedProfit();
        const playerMoney = window.getPlayerMoney ? window.getPlayerMoney() : 0;
        const canUpgrade = playerMoney >= storageData.upgradeCost;
        const canCollect = accumulatedProfit > 0;
        const canHire = storageData.workers < storageData.maxWorkers && playerMoney >= 5000;
        const canBuy = !storageData.isOwned && playerMoney >= storageData.purchaseCost;
        
        // –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
        const assignedEmployee = window.getEmpByBuilding ? window.getEmpByBuilding('storage') : null;
        
        // –ï—Å–ª–∏ –∑–¥–∞–Ω–∏–µ –Ω–µ –∫—É–ø–ª–µ–Ω–æ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª—å –ø–æ–∫—É–ø–∫–∏
        if (!storageData.isOwned) {
            panel.innerHTML = `
                <div class="building-panel-container">
                    <!-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ -->
                    <div class="building-panel-header">
                        <div class="building-panel-title">
                            <img src="${STORAGE_CONFIG.icon}" alt="${STORAGE_CONFIG.name}" class="building-icon">
                            <h2>${STORAGE_CONFIG.name}</h2>
                        </div>
                        <button class="close-btn" onclick="closeStoragePanel()">√ó</button>
                    </div>
                    
                    <!-- –ü–∞–Ω–µ–ª—å –ø–æ–∫—É–ø–∫–∏ -->
                    <div class="building-panel-content">
                        <div class="purchase-card">
                            <div class="purchase-info">
                                <h3>–ö—É–ø–∏—Ç—å ${STORAGE_CONFIG.name}</h3>
                                <p>–ü–æ—á—Ç–æ–≤–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏ –∫–æ—Ä—Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ü–∏–∏</p>
                                
                                <div class="purchase-details">
                                    <div class="detail-item">
                                        <span>–°—Ç–æ–∏–º–æ—Å—Ç—å:</span>
                                        <span class="cost">${formatNumber(storageData.purchaseCost)}</span>
                                    </div>
                                    <div class="detail-item">
                                        <span>–î–æ—Ö–æ–¥ –≤ —á–∞—Å:</span>
                                        <span class="income">${formatNumber(storageData.income)}</span>
                                    </div>
                                    <div class="detail-item">
                                        <span>–ú–∞–∫—Å. —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤:</span>
                                        <span class="workers">${storageData.maxWorkers}</span>
                                    </div>
                                </div>
                            </div>
                            
                            <button class="purchase-btn ${canBuy ? 'active' : 'disabled'}" 
                                    onclick="buyStorage()" 
                                    ${!canBuy ? 'disabled' : ''}>
                                <span>–ö—É–ø–∏—Ç—å –∑–∞ ${formatNumber(storageData.purchaseCost)}</span>
                            </button>
                        </div>
                    </div>
                </div>
            `;
        } else {
            // –û–±—ã—á–Ω–∞—è –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
            panel.innerHTML = `
                <div class="building-panel-container">
                    <!-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ -->
                    <div class="building-panel-header">
                        <div class="building-panel-title">
                            <img src="${STORAGE_CONFIG.icon}" alt="${STORAGE_CONFIG.name}" class="building-icon">
                            <h2>${STORAGE_CONFIG.name}</h2>
                        </div>
                        <button class="close-btn" onclick="closeStoragePanel()">√ó</button>
                    </div>
                    
                    <!-- –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è -->
                    <div class="building-panel-content">
                        <!-- –ö–∞—Ä—Ç–æ—á–∫–∞ –¥–æ—Ö–æ–¥–∞ -->
                        <div class="income-card">
                            <div class="card-header">
                                <h3>–î–æ—Ö–æ–¥</h3>
                                <div class="level-badge">–£—Ä–æ–≤–µ–Ω—å ${storageData.level}</div>
                            </div>
                            
                            <div class="income-info">
                                <div class="income-amount">
                                    <span class="income-value">${formatNumber(storageData.income)}</span>
                                    <span class="income-period">/—á–∞—Å</span>
                                </div>
                                
                                <div class="profit-info">
                                    <div class="profit-label">–ù–∞–∫–æ–ø–ª–µ–Ω–æ:</div>
                                    <div class="profit-amount">${formatNumber(accumulatedProfit)}</div>
                                </div>
                            </div>
                            
                            <!-- –ö–Ω–æ–ø–∫–∞ —Å–±–æ—Ä–∞ -->
                            <button class="collect-btn ${canCollect ? 'active' : 'disabled'}" 
                                    onclick="collectStorageIncome()" 
                                    ${!canCollect ? 'disabled' : ''}>
                                <span>–°–æ–±—Ä–∞—Ç—å</span>
                                <img src="assets/svg/money-icon.svg" alt="Collect">
                            </button>
                        </div>
                        
                        <!-- –ö–∞—Ä—Ç–æ—á–∫–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ -->
                        <div class="delivery-card">
                            <div class="card-header">
                                <h3>–î–æ—Å—Ç–∞–≤–∫–∞</h3>
                                <div class="delivery-count">${storageData.deliveryOrders.length}/${STORAGE_CONFIG.maxDeliveryOrders}</div>
                            </div>
                            
                            <div class="delivery-info">
                                ${storageData.deliveryOrders.length > 0 ? `
                                    <div class="delivery-orders">
                                        ${storageData.deliveryOrders.map((order, index) => `
                                            <div class="delivery-order">
                                                <div class="order-info">
                                                    <div class="order-type">${order.type === 'books' ? '–ö–Ω–∏–≥–∏' : '–ñ—É—Ä–Ω–∞–ª—ã'}</div>
                                                    <div class="order-quantity">${order.quantity} —à—Ç.</div>
                                                </div>
                                                <div class="order-reward">+${formatNumber(order.reward)}</div>
                                            </div>
                                        `).join('')}
                                    </div>
                                ` : `
                                    <div class="no-deliveries">
                                        <div class="no-deliveries-text">–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤</div>
                                    </div>
                                `}
                            </div>
                            
                            <button class="delivery-btn" onclick="openDeliveryMenu()">
                                –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç–∞–≤–∫–æ–π
                            </button>
                        </div>
                        
                        <!-- –ö–∞—Ä—Ç–æ—á–∫–∞ —É–ª—É—á—à–µ–Ω–∏—è -->
                        <div class="upgrade-card">
                            <div class="card-header">
                                <h3>–£–ª—É—á—à–µ–Ω–∏–µ</h3>
                            </div>
                            
                            <div class="upgrade-info">
                                <div class="upgrade-cost">
                                    <span>–°—Ç–æ–∏–º–æ—Å—Ç—å:</span>
                                    <span class="cost-amount">${formatNumber(storageData.upgradeCost)}</span>
                                </div>
                            </div>
                            
                            <button class="upgrade-btn ${canUpgrade ? 'active' : 'disabled'}" 
                                    onclick="upgradeStorage()" 
                                    ${!canUpgrade ? 'disabled' : ''}>
                                <span>–£–ª—É—á—à–∏—Ç—å</span>
                                <div class="cost-display">
                                    <img src="assets/svg/money-icon.svg" alt="Cost">
                                    <span>${formatNumber(storageData.upgradeCost)}</span>
                                </div>
                            </button>
                        </div>
                        
                        <!-- –ö–∞—Ä—Ç–æ—á–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ -->
                        <div class="employee-card">
                            <div class="card-header">
                                <h3>–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏</h3>
                                <div class="employee-count">${storageData.workers}/${storageData.maxWorkers}</div>
                            </div>
                            
                            ${assignedEmployee ? `
                                <div class="assigned-employee">
                                    <img src="${assignedEmployee.img}" alt="${assignedEmployee.name}" class="employee-avatar">
                                    <div class="employee-info">
                                        <div class="employee-name">${assignedEmployee.name}</div>
                                        <div class="employee-level">–£—Ä–æ–≤–µ–Ω—å ${assignedEmployee.level}</div>
                                        <div class="employee-skill">–ù–∞–≤—ã–∫: ${assignedEmployee.skill}</div>
                                    </div>
                                </div>
                            ` : `
                                <div class="no-employee">
                                    <div class="no-employee-text">–ù–µ—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞</div>
                                </div>
                            `}
                            
                            <button class="employee-btn" onclick="openEmployeeAssignment('storage')">
                                ${assignedEmployee ? '–°–º–µ–Ω–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞' : '–ù–∞–∑–Ω–∞—á–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞'}
                            </button>
                        </div>
                    </div>
                </div>
            `;
        }
        
        return panel;
    }
    
    // === –§–£–ù–ö–¶–ò–ò –£–ü–†–ê–í–õ–ï–ù–ò–Ø ===
    function buyStorage() {
        const playerMoney = window.getPlayerMoney ? window.getPlayerMoney() : 0;
        
        if (playerMoney >= storageData.purchaseCost) {
            // –°–ø–∏—Å—ã–≤–∞–µ–º –¥–µ–Ω—å–≥–∏
            if (window.setPlayerMoney) {
                window.setPlayerMoney(playerMoney - storageData.purchaseCost);
            }
            
            // –ü–æ–∫—É–ø–∞–µ–º –∑–¥–∞–Ω–∏–µ
            storageData.isOwned = true;
            storageData.lastCollectTime = Date.now();
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
            saveStorageData();
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            if (window.showNotification) {
                window.showNotification(`üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –∫—É–ø–∏–ª–∏ ${STORAGE_CONFIG.name}!`, 'success');
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞–Ω–µ–ª—å
            setTimeout(() => {
                openStoragePanel();
            }, 100);
        } else {
            if (window.showNotification) {
                window.showNotification('‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è –ø–æ–∫—É–ø–∫–∏!', 'error');
            }
        }
    }
    
    function collectStorageIncome() {
        const accumulatedProfit = calculateAccumulatedProfit();
        
        if (accumulatedProfit > 0) {
            // –î–æ–±–∞–≤–ª—è–µ–º –¥–µ–Ω—å–≥–∏ –∫ –±–∞–ª–∞–Ω—Å—É
            if (window.setPlayerMoney && window.getPlayerMoney) {
                const currentMoney = window.getPlayerMoney();
                window.setPlayerMoney(currentMoney + accumulatedProfit);
            }
            
            // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—É—é –ø—Ä–∏–±—ã–ª—å
            storageData.accumulatedProfit = 0;
            storageData.lastCollectTime = Date.now();
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
            saveStorageData();
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            if (window.showNotification) {
                window.showNotification(`üí∞ –ü–æ–ª—É—á–µ–Ω–æ ${formatNumber(accumulatedProfit)}`, 'success');
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞–Ω–µ–ª—å
            setTimeout(() => {
                openStoragePanel();
            }, 100);
        } else {
            if (window.showNotification) {
                window.showNotification('‚ùå –ù–µ—Ç –¥–µ–Ω–µ–≥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è!', 'error');
            }
        }
    }
    
    function upgradeStorage() {
        const playerMoney = window.getPlayerMoney ? window.getPlayerMoney() : 0;
        
        if (playerMoney >= storageData.upgradeCost) {
            // –°–ø–∏—Å—ã–≤–∞–µ–º –¥–µ–Ω—å–≥–∏
            if (window.setPlayerMoney) {
                window.setPlayerMoney(playerMoney - storageData.upgradeCost);
            }
            
            // –£–ª—É—á—à–∞–µ–º –∑–¥–∞–Ω–∏–µ
            storageData.level++;
            storageData.income = Math.floor(storageData.income * 1.5);
            storageData.upgradeCost = Math.floor(storageData.upgradeCost * 2);
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
            saveStorageData();
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            if (window.showNotification) {
                window.showNotification(`üèóÔ∏è –ü–æ—á—Ç–∞ —É–ª—É—á—à–µ–Ω–∞ –¥–æ —É—Ä–æ–≤–Ω—è ${storageData.level}!`, 'success');
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞–Ω–µ–ª—å
            setTimeout(() => {
                openStoragePanel();
            }, 100);
        } else {
            if (window.showNotification) {
                window.showNotification('‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è!', 'error');
            }
        }
    }
    
    // === –°–ò–°–¢–ï–ú–ê –î–û–°–¢–ê–í–ö–ò ===
    function startDeliverySystem() {
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –∑–∞–∫–∞–∑—ã –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫—É
        setInterval(() => {
            if (storageData.isOwned && storageData.deliveryOrders.length < STORAGE_CONFIG.maxDeliveryOrders) {
                generateDeliveryOrder();
            }
        }, 30000); // –ö–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
    }
    
    function generateDeliveryOrder() {
        const orderTypes = ['books', 'magazines'];
        const type = orderTypes[Math.floor(Math.random() * orderTypes.length)];
        const quantity = Math.floor(Math.random() * 5) + 1; // 1-5 —à—Ç—É–∫
        const reward = quantity * (type === 'books' ? 1000 : 500); // 1000 –∑–∞ –∫–Ω–∏–≥—É, 500 –∑–∞ –∂—É—Ä–Ω–∞–ª
        
        const order = {
            id: Date.now(),
            type: type,
            quantity: quantity,
            reward: reward,
            timeLeft: STORAGE_CONFIG.deliveryTime * 60 * 1000, // –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
            createdAt: Date.now()
        };
        
        storageData.deliveryOrders.push(order);
        saveStorageData();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ
        if (window.showNotification) {
            window.showNotification(`üì¶ –ù–æ–≤—ã–π –∑–∞–∫–∞–∑: ${quantity} ${type === 'books' ? '–∫–Ω–∏–≥' : '–∂—É—Ä–Ω–∞–ª–æ–≤'}`, 'info');
        }
    }
    
    function openDeliveryMenu() {
        // –°–æ–∑–¥–∞–µ–º –º–µ–Ω—é –¥–æ—Å—Ç–∞–≤–∫–∏
        const menu = document.createElement('div');
        menu.className = 'delivery-menu';
        menu.id = 'delivery-menu';
        
        menu.innerHTML = `
            <div class="delivery-menu-container">
                <div class="delivery-menu-header">
                    <h3>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç–∞–≤–∫–æ–π</h3>
                    <button class="close-btn" onclick="closeDeliveryMenu()">√ó</button>
                </div>
                
                <div class="delivery-menu-content">
                    ${storageData.deliveryOrders.length > 0 ? `
                        <div class="active-orders">
                            <h4>–ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã</h4>
                            ${storageData.deliveryOrders.map((order, index) => `
                                <div class="order-item">
                                    <div class="order-details">
                                        <div class="order-type">${order.type === 'books' ? '–ö–Ω–∏–≥–∏' : '–ñ—É—Ä–Ω–∞–ª—ã'}</div>
                                        <div class="order-quantity">${order.quantity} —à—Ç.</div>
                                        <div class="order-reward">+${formatNumber(order.reward)}</div>
                                    </div>
                                    <button class="complete-order-btn" onclick="completeDeliveryOrder(${order.id})">
                                        –í—ã–ø–æ–ª–Ω–∏—Ç—å
                                    </button>
                                </div>
                            `).join('')}
                        </div>
                    ` : `
                        <div class="no-orders">
                            <div class="no-orders-text">–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤</div>
                            <button class="generate-order-btn" onclick="generateDeliveryOrder()">
                                –°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑
                            </button>
                        </div>
                    `}
                </div>
            </div>
        `;
        
        document.body.appendChild(menu);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
        setTimeout(() => {
            menu.classList.add('show');
        }, 10);
    }
    
    function completeDeliveryOrder(orderId) {
        const orderIndex = storageData.deliveryOrders.findIndex(order => order.id === orderId);
        if (orderIndex === -1) return;
        
        const order = storageData.deliveryOrders[orderIndex];
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–æ–≤–∞—Ä—ã –≤ –Ω–∞–ª–∏—á–∏–∏
        const storedBooks = window.storedBooks || 0;
        const storedMags = window.storedMags || 0;
        
        if (order.type === 'books' && storedBooks < order.quantity) {
            if (window.showNotification) {
                window.showNotification('‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–Ω–∏–≥ –≤ –Ω–∞–ª–∏—á–∏–∏!', 'error');
            }
            return;
        }
        
        if (order.type === 'magazines' && storedMags < order.quantity) {
            if (window.showNotification) {
                window.showNotification('‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∂—É—Ä–Ω–∞–ª–æ–≤ –≤ –Ω–∞–ª–∏—á–∏–∏!', 'error');
            }
            return;
        }
        
        // –£–±–∏—Ä–∞–µ–º —Ç–æ–≤–∞—Ä—ã –∏–∑ —Å–∫–ª–∞–¥–∞
        if (order.type === 'books') {
            window.storedBooks = Math.max(0, storedBooks - order.quantity);
        } else {
            window.storedMags = Math.max(0, storedMags - order.quantity);
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–≥—Ä–∞–¥—É
        if (window.setPlayerMoney && window.getPlayerMoney) {
            const currentMoney = window.getPlayerMoney();
            window.setPlayerMoney(currentMoney + order.reward);
        }
        
        // –£–¥–∞–ª—è–µ–º –∑–∞–∫–∞–∑
        storageData.deliveryOrders.splice(orderIndex, 1);
        saveStorageData();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        if (window.showNotification) {
            window.showNotification(`‚úÖ –ó–∞–∫–∞–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω! –ü–æ–ª—É—á–µ–Ω–æ ${formatNumber(order.reward)}`, 'success');
        }
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –ø–∞–Ω–µ–ª—å
        closeDeliveryMenu();
        setTimeout(() => {
            openStoragePanel();
        }, 100);
    }
    
    function closeDeliveryMenu() {
        const menu = document.getElementById('delivery-menu');
        if (menu) {
            menu.classList.remove('show');
            setTimeout(() => {
                if (menu.parentNode) {
                    menu.parentNode.removeChild(menu);
                }
            }, 300);
        }
    }
    
    // === –†–ê–°–ß–ï–¢ –ü–†–ò–ë–´–õ–ò ===
    function calculateAccumulatedProfit() {
        if (!storageData.isOwned) return 0;
        
        const currentTime = Date.now();
        const timeDiff = currentTime - storageData.lastCollectTime;
        const hoursPassed = timeDiff / (1000 * 60 * 60);
        
        // –ë–∞–∑–æ–≤—ã–π –¥–æ—Ö–æ–¥ –≤ —á–∞—Å —Å —É—á–µ—Ç–æ–º —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤
        const hourlyIncome = storageData.income * (1 + storageData.workers * STORAGE_CONFIG.workerBonus);
        
        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—É—é –ø—Ä–∏–±—ã–ª—å
        const newProfit = hourlyIncome * hoursPassed;
        
        return Math.floor(storageData.accumulatedProfit + newProfit);
    }
    
    // === –°–û–•–†–ê–ù–ï–ù–ò–ï –ò –ó–ê–ì–†–£–ó–ö–ê ===
    function saveStorageData() {
        localStorage.setItem('storageData', JSON.stringify(storageData));
    }
    
    function loadStorageData() {
        const saved = localStorage.getItem('storageData');
        if (saved) {
            const parsed = JSON.parse(saved);
            storageData = { ...storageData, ...parsed };
        }
    }
    
    // === –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ===
    function formatNumber(num) {
        if (num >= 1000000) {
            return (num / 1000000).toFixed(1) + 'M';
        } else if (num >= 1000) {
            return (num / 1000).toFixed(1) + 'k';
        }
        return num.toString();
    }
    
    function closeStoragePanel() {
        const panel = document.getElementById('building-panel');
        if (panel) {
            panel.classList.remove('show');
            setTimeout(() => {
                if (panel.parentNode) {
                    panel.parentNode.removeChild(panel);
                }
            }, 300);
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        const mapContainer = document.getElementById('map-container');
        if (mapContainer) {
            mapContainer.style.display = 'block';
        }
    }
    
    // === –ì–õ–û–ë–ê–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ===
    window.initStorageBuilding = initStorageBuilding;
    window.buyStorage = buyStorage;
    window.collectStorageIncome = collectStorageIncome;
    window.upgradeStorage = upgradeStorage;
    window.closeStoragePanel = closeStoragePanel;
    window.openDeliveryMenu = openDeliveryMenu;
    window.completeDeliveryOrder = completeDeliveryOrder;
    window.closeDeliveryMenu = closeDeliveryMenu;
    window.generateDeliveryOrder = generateDeliveryOrder;
    window.openEmployeeAssignment = function(building) {
        if (window.openAssignOverlay) {
            window.openAssignOverlay(building);
        }
    };
    
    // === –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ===
    document.addEventListener('DOMContentLoaded', function() {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ—á—Ç—É –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
        setTimeout(initStorageBuilding, 100);
    });
    
})();

/**
 * –®–ê–ë–õ–û–ù –¢–ò–ü–û–ì–†–ê–§–ò–ò (PRINT)
 * –ü–æ–ª–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è –≤–Ω–µ–¥—Ä–µ–Ω–∏—è –≤ –Ω–æ–≤—É—é –∫–∞—Ä—Ç—É
 * –í–∫–ª—é—á–∞–µ—Ç —Å–∏—Å—Ç–µ–º—É –ø–µ—á–∞—Ç–∏ –∫–Ω–∏–≥ –∏ –∂—É—Ä–Ω–∞–ª–æ–≤ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º
 * 
 * –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:
 * 1. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª –≤ HTML
 * 2. –í—ã–∑–æ–≤–∏—Ç–µ initPrintBuilding() –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
 * 3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –∑–æ–Ω—ã –ø–æ–¥ –Ω–æ–≤—É—é –∫–∞—Ä—Ç—É
 */

(function() {
    'use strict';
    
    // === –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –¢–ò–ü–û–ì–†–ê–§–ò–ò ===
    const PRINT_CONFIG = {
        name: '–¢–∏–ø–æ–≥—Ä–∞—Ñ–∏—è',
        type: 'print',
        icon: 'assets/svg/city-panel/typography.svg',
        // –ö–û–û–†–î–ò–ù–ê–¢–´ –î–õ–Ø –ù–û–í–û–ô –ö–ê–†–¢–´ - –ù–ê–°–¢–†–û–ô–¢–ï –ü–û–î –í–ê–®–£ –ö–ê–†–¢–£
        zone: {
            left: '45%',      // –ü–æ–∑–∏—Ü–∏—è —Å–ª–µ–≤–∞
            top: '55%',       // –ü–æ–∑–∏—Ü–∏—è —Å–≤–µ—Ä—Ö—É
            width: '10%',     // –®–∏—Ä–∏–Ω–∞ –∑–æ–Ω—ã
            height: '15%'     // –í—ã—Å–æ—Ç–∞ –∑–æ–Ω—ã
        },
        // –ë–∞–∑–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        baseIncome: 5000,
        baseUpgradeCost: 10000,
        maxWorkers: 3,
        workerBonus: 0.2, // 20% –±–æ–Ω—É—Å –∑–∞ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞
        purchaseCost: 25000,
        // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–µ—á–∞—Ç–∏
        printCost: 15000,
        printTime: 30, // –º–∏–Ω—É—Ç
        expediteCost: 5000,
        expediteTime: 5 // –º–∏–Ω—É—Ç
    };
    
    // === –î–ê–ù–ù–´–ï –¢–ò–ü–û–ì–†–ê–§–ò–ò ===
    let printData = {
        level: 1,
        income: PRINT_CONFIG.baseIncome,
        workers: 0,
        maxWorkers: PRINT_CONFIG.maxWorkers,
        upgradeCost: PRINT_CONFIG.baseUpgradeCost,
        lastCollectTime: Date.now(),
        accumulatedProfit: 0,
        isOwned: false,
        purchaseCost: PRINT_CONFIG.purchaseCost,
        name: PRINT_CONFIG.name,
        // –î–∞–Ω–Ω—ã–µ –ø–µ—á–∞—Ç–∏
        isPrinting: false,
        printStartTime: 0,
        printTotalTime: PRINT_CONFIG.printTime * 60 * 1000, // –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
        isExpedited: false,
        currentPrintType: 'books', // 'books' –∏–ª–∏ 'magazines'
        currentPrintQuantity: 1
    };
    
    // === –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ===
    function initPrintBuilding() {
        console.log('üñ®Ô∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∏...');
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        loadPrintData();
        
        // –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é –∑–æ–Ω—É
        createPrintZone();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–∞–Ω–µ–ª—å
        initPrintPanel();
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏—Å—Ç–µ–º—É –ø–µ—á–∞—Ç–∏
        startPrintSystem();
        
        console.log('‚úÖ –¢–∏–ø–æ–≥—Ä–∞—Ñ–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
    }
    
    // === –°–û–ó–î–ê–ù–ò–ï –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–û–ô –ó–û–ù–´ ===
    function createPrintZone() {
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –∑–æ–Ω—É –µ—Å–ª–∏ –µ—Å—Ç—å
        const oldZone = document.getElementById('zone-print');
        if (oldZone) {
            oldZone.remove();
        }
        
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–æ–Ω—É
        const zone = document.createElement('div');
        zone.className = 'building-zone';
        zone.id = 'zone-print';
        zone.dataset.building = 'print';
        zone.title = PRINT_CONFIG.name;
        zone.textContent = '1'; // –ù–æ–º–µ—Ä –∑–¥–∞–Ω–∏—è
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é
        zone.style.left = PRINT_CONFIG.zone.left;
        zone.style.top = PRINT_CONFIG.zone.top;
        zone.style.width = PRINT_CONFIG.zone.width;
        zone.style.height = PRINT_CONFIG.zone.height;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        zone.addEventListener('click', handlePrintClick);
        zone.addEventListener('touchstart', handlePrintTouch, { passive: true });
        zone.setAttribute('data-handlers-added', 'true');
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–∞—Ä—Ç—ã
        const mapContainer = document.getElementById('map-container');
        if (mapContainer) {
            mapContainer.appendChild(zone);
        }
    }
    
    // === –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –°–û–ë–´–¢–ò–ô ===
    function handlePrintClick(event) {
        event.preventDefault();
        event.stopPropagation();
        
        console.log('üñ®Ô∏è –ö–ª–∏–∫ –ø–æ —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∏');
        
        // –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –ø—Ä–∏–±—ã–ª–∏
        if (window.hideProfitIndicators) {
            window.hideProfitIndicators();
        }
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏—è
        if (window.zoomToBuilding) {
            window.zoomToBuilding('print', PRINT_CONFIG.name);
        } else {
            // –ï—Å–ª–∏ –∞–Ω–∏–º–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –æ—Ç–∫—Ä—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª—å –Ω–∞–ø—Ä—è–º—É—é
            openPrintPanel();
        }
    }
    
    function handlePrintTouch(event) {
        event.preventDefault();
        handlePrintClick(event);
    }
    
    // === –ü–ê–ù–ï–õ–¨ –¢–ò–ü–û–ì–†–ê–§–ò–ò ===
    function openPrintPanel() {
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é –ø–∞–Ω–µ–ª—å
        if (window.closeBuildingPanel) {
            window.closeBuildingPanel();
        }
        
        // –°–æ–∑–¥–∞–µ–º –ø–∞–Ω–µ–ª—å
        const panel = createPrintPanel();
        document.body.appendChild(panel);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª—å —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
        setTimeout(() => {
            panel.classList.add('show');
        }, 10);
        
        // –°–∫—Ä—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        const mapContainer = document.getElementById('map-container');
        if (mapContainer) {
            mapContainer.style.display = 'none';
        }
    }
    
    function createPrintPanel() {
        const panel = document.createElement('div');
        panel.className = 'building-panel';
        panel.id = 'building-panel';
        
        // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        const accumulatedProfit = calculateAccumulatedProfit();
        const playerMoney = window.getPlayerMoney ? window.getPlayerMoney() : 0;
        const canUpgrade = playerMoney >= printData.upgradeCost;
        const canCollect = accumulatedProfit > 0;
        const canHire = printData.workers < printData.maxWorkers && playerMoney >= 5000;
        const canBuy = !printData.isOwned && playerMoney >= printData.purchaseCost;
        const canPrint = !printData.isPrinting && playerMoney >= PRINT_CONFIG.printCost;
        
        // –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
        const assignedEmployee = window.getEmpByBuilding ? window.getEmpByBuilding('print') : null;
        
        // –ï—Å–ª–∏ –∑–¥–∞–Ω–∏–µ –Ω–µ –∫—É–ø–ª–µ–Ω–æ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª—å –ø–æ–∫—É–ø–∫–∏
        if (!printData.isOwned) {
            panel.innerHTML = `
                <div class="building-panel-container">
                    <!-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ -->
                    <div class="building-panel-header">
                        <div class="building-panel-title">
                            <img src="${PRINT_CONFIG.icon}" alt="${PRINT_CONFIG.name}" class="building-icon">
                            <h2>${PRINT_CONFIG.name}</h2>
                        </div>
                        <button class="close-btn" onclick="closePrintPanel()">√ó</button>
                    </div>
                    
                    <!-- –ü–∞–Ω–µ–ª—å –ø–æ–∫—É–ø–∫–∏ -->
                    <div class="building-panel-content">
                        <div class="purchase-card">
                            <div class="purchase-info">
                                <h3>–ö—É–ø–∏—Ç—å ${PRINT_CONFIG.name}</h3>
                                <p>–ü–µ—á–∞—Ç–Ω–æ–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –ø–µ—á–∞—Ç–Ω–æ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏</p>
                                
                                <div class="purchase-details">
                                    <div class="detail-item">
                                        <span>–°—Ç–æ–∏–º–æ—Å—Ç—å:</span>
                                        <span class="cost">${formatNumber(printData.purchaseCost)}</span>
                                    </div>
                                    <div class="detail-item">
                                        <span>–î–æ—Ö–æ–¥ –≤ —á–∞—Å:</span>
                                        <span class="income">${formatNumber(printData.income)}</span>
                                    </div>
                                    <div class="detail-item">
                                        <span>–ú–∞–∫—Å. —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤:</span>
                                        <span class="workers">${printData.maxWorkers}</span>
                                    </div>
                                </div>
                            </div>
                            
                            <button class="purchase-btn ${canBuy ? 'active' : 'disabled'}" 
                                    onclick="buyPrint()" 
                                    ${!canBuy ? 'disabled' : ''}>
                                <span>–ö—É–ø–∏—Ç—å –∑–∞ ${formatNumber(printData.purchaseCost)}</span>
                            </button>
                        </div>
                    </div>
                </div>
            `;
        } else {
            // –û–±—ã—á–Ω–∞—è –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
            panel.innerHTML = `
                <div class="building-panel-container">
                    <!-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ -->
                    <div class="building-panel-header">
                        <div class="building-panel-title">
                            <img src="${PRINT_CONFIG.icon}" alt="${PRINT_CONFIG.name}" class="building-icon">
                            <h2>${PRINT_CONFIG.name}</h2>
                        </div>
                        <button class="close-btn" onclick="closePrintPanel()">√ó</button>
                    </div>
                    
                    <!-- –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è -->
                    <div class="building-panel-content">
                        <!-- –ö–∞—Ä—Ç–æ—á–∫–∞ –¥–æ—Ö–æ–¥–∞ -->
                        <div class="income-card">
                            <div class="card-header">
                                <h3>–î–æ—Ö–æ–¥</h3>
                                <div class="level-badge">–£—Ä–æ–≤–µ–Ω—å ${printData.level}</div>
                            </div>
                            
                            <div class="income-info">
                                <div class="income-amount">
                                    <span class="income-value">${formatNumber(printData.income)}</span>
                                    <span class="income-period">/—á–∞—Å</span>
                                </div>
                                
                                <div class="profit-info">
                                    <div class="profit-label">–ù–∞–∫–æ–ø–ª–µ–Ω–æ:</div>
                                    <div class="profit-amount">${formatNumber(accumulatedProfit)}</div>
                                </div>
                            </div>
                            
                            <!-- –ö–Ω–æ–ø–∫–∞ —Å–±–æ—Ä–∞ -->
                            <button class="collect-btn ${canCollect ? 'active' : 'disabled'}" 
                                    onclick="collectPrintIncome()" 
                                    ${!canCollect ? 'disabled' : ''}>
                                <span>–°–æ–±—Ä–∞—Ç—å</span>
                                <img src="assets/svg/money-icon.svg" alt="Collect">
                            </button>
                        </div>
                        
                        <!-- –ö–∞—Ä—Ç–æ—á–∫–∞ –ø–µ—á–∞—Ç–∏ -->
                        <div class="print-card">
                            <div class="card-header">
                                <h3>–ü–µ—á–∞—Ç—å</h3>
                                <div class="print-status ${printData.isPrinting ? 'printing' : 'idle'}">
                                    ${printData.isPrinting ? '–ü–µ—á–∞—Ç–∞–µ—Ç' : '–ì–æ—Ç–æ–≤–∞'}
                                </div>
                            </div>
                            
                            ${printData.isPrinting ? `
                                <div class="print-progress">
                                    <div class="progress-info">
                                        <div class="progress-type">${printData.currentPrintType === 'books' ? '–ö–Ω–∏–≥–∏' : '–ñ—É—Ä–Ω–∞–ª—ã'}</div>
                                        <div class="progress-quantity">${printData.currentPrintQuantity} —à—Ç.</div>
                                    </div>
                                    
                                    <div class="progress-bar">
                                        <div class="progress-fill" id="print-progress-fill"></div>
                                    </div>
                                    
                                    <div class="progress-time">
                                        <span id="print-time-left">0 –º–∏–Ω.</span>
                                    </div>
                                    
                                    <div class="print-actions">
                                        <button class="expedite-btn" onclick="expeditePrint()">
                                            –£—Å–∫–æ—Ä–∏—Ç—å –∑–∞ ${formatNumber(PRINT_CONFIG.expediteCost)}
                                        </button>
                                    </div>
                                </div>
                            ` : `
                                <div class="print-menu">
                                    <div class="print-options">
                                        <div class="print-type-selector">
                                            <label>
                                                <input type="radio" name="print-type" value="books" checked>
                                                <span>–ö–Ω–∏–≥–∏</span>
                                            </label>
                                            <label>
                                                <input type="radio" name="print-type" value="magazines">
                                                <span>–ñ—É—Ä–Ω–∞–ª—ã</span>
                                            </label>
                                        </div>
                                        
                                        <div class="print-quantity-selector">
                                            <label>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:</label>
                                            <select id="print-quantity">
                                                <option value="1">1 —à—Ç.</option>
                                                <option value="2">2 —à—Ç.</option>
                                                <option value="3">3 —à—Ç.</option>
                                                <option value="5">5 —à—Ç.</option>
                                                <option value="10">10 —à—Ç.</option>
                                            </select>
                                        </div>
                                    </div>
                                    
                                    <button class="start-print-btn ${canPrint ? 'active' : 'disabled'}" 
                                            onclick="startPrint()" 
                                            ${!canPrint ? 'disabled' : ''}>
                                        <span>–ù–∞—á–∞—Ç—å –ø–µ—á–∞—Ç—å</span>
                                        <div class="cost-display">
                                            <img src="assets/svg/money-icon.svg" alt="Cost">
                                            <span>${formatNumber(PRINT_CONFIG.printCost)}</span>
                                        </div>
                                    </button>
                                </div>
                            `}
                        </div>
                        
                        <!-- –ö–∞—Ä—Ç–æ—á–∫–∞ —É–ª—É—á—à–µ–Ω–∏—è -->
                        <div class="upgrade-card">
                            <div class="card-header">
                                <h3>–£–ª—É—á—à–µ–Ω–∏–µ</h3>
                            </div>
                            
                            <div class="upgrade-info">
                                <div class="upgrade-cost">
                                    <span>–°—Ç–æ–∏–º–æ—Å—Ç—å:</span>
                                    <span class="cost-amount">${formatNumber(printData.upgradeCost)}</span>
                                </div>
                            </div>
                            
                            <button class="upgrade-btn ${canUpgrade ? 'active' : 'disabled'}" 
                                    onclick="upgradePrint()" 
                                    ${!canUpgrade ? 'disabled' : ''}>
                                <span>–£–ª—É—á—à–∏—Ç—å</span>
                                <div class="cost-display">
                                    <img src="assets/svg/money-icon.svg" alt="Cost">
                                    <span>${formatNumber(printData.upgradeCost)}</span>
                                </div>
                            </button>
                        </div>
                        
                        <!-- –ö–∞—Ä—Ç–æ—á–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ -->
                        <div class="employee-card">
                            <div class="card-header">
                                <h3>–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏</h3>
                                <div class="employee-count">${printData.workers}/${printData.maxWorkers}</div>
                            </div>
                            
                            ${assignedEmployee ? `
                                <div class="assigned-employee">
                                    <img src="${assignedEmployee.img}" alt="${assignedEmployee.name}" class="employee-avatar">
                                    <div class="employee-info">
                                        <div class="employee-name">${assignedEmployee.name}</div>
                                        <div class="employee-level">–£—Ä–æ–≤–µ–Ω—å ${assignedEmployee.level}</div>
                                        <div class="employee-skill">–ù–∞–≤—ã–∫: ${assignedEmployee.skill}</div>
                                    </div>
                                </div>
                            ` : `
                                <div class="no-employee">
                                    <div class="no-employee-text">–ù–µ—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞</div>
                                </div>
                            `}
                            
                            <button class="employee-btn" onclick="openEmployeeAssignment('print')">
                                ${assignedEmployee ? '–°–º–µ–Ω–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞' : '–ù–∞–∑–Ω–∞—á–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞'}
                            </button>
                        </div>
                    </div>
                </div>
            `;
        }
        
        return panel;
    }
    
    // === –§–£–ù–ö–¶–ò–ò –£–ü–†–ê–í–õ–ï–ù–ò–Ø ===
    function buyPrint() {
        const playerMoney = window.getPlayerMoney ? window.getPlayerMoney() : 0;
        
        if (playerMoney >= printData.purchaseCost) {
            // –°–ø–∏—Å—ã–≤–∞–µ–º –¥–µ–Ω—å–≥–∏
            if (window.setPlayerMoney) {
                window.setPlayerMoney(playerMoney - printData.purchaseCost);
            }
            
            // –ü–æ–∫—É–ø–∞–µ–º –∑–¥–∞–Ω–∏–µ
            printData.isOwned = true;
            printData.lastCollectTime = Date.now();
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
            savePrintData();
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            if (window.showNotification) {
                window.showNotification(`üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –∫—É–ø–∏–ª–∏ ${PRINT_CONFIG.name}!`, 'success');
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞–Ω–µ–ª—å
            setTimeout(() => {
                openPrintPanel();
            }, 100);
        } else {
            if (window.showNotification) {
                window.showNotification('‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è –ø–æ–∫—É–ø–∫–∏!', 'error');
            }
        }
    }
    
    function collectPrintIncome() {
        const accumulatedProfit = calculateAccumulatedProfit();
        
        if (accumulatedProfit > 0) {
            // –î–æ–±–∞–≤–ª—è–µ–º –¥–µ–Ω—å–≥–∏ –∫ –±–∞–ª–∞–Ω—Å—É
            if (window.setPlayerMoney && window.getPlayerMoney) {
                const currentMoney = window.getPlayerMoney();
                window.setPlayerMoney(currentMoney + accumulatedProfit);
            }
            
            // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—É—é –ø—Ä–∏–±—ã–ª—å
            printData.accumulatedProfit = 0;
            printData.lastCollectTime = Date.now();
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
            savePrintData();
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            if (window.showNotification) {
                window.showNotification(`üí∞ –ü–æ–ª—É—á–µ–Ω–æ ${formatNumber(accumulatedProfit)}`, 'success');
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞–Ω–µ–ª—å
            setTimeout(() => {
                openPrintPanel();
            }, 100);
        } else {
            if (window.showNotification) {
                window.showNotification('‚ùå –ù–µ—Ç –¥–µ–Ω–µ–≥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è!', 'error');
            }
        }
    }
    
    function upgradePrint() {
        const playerMoney = window.getPlayerMoney ? window.getPlayerMoney() : 0;
        
        if (playerMoney >= printData.upgradeCost) {
            // –°–ø–∏—Å—ã–≤–∞–µ–º –¥–µ–Ω—å–≥–∏
            if (window.setPlayerMoney) {
                window.setPlayerMoney(playerMoney - printData.upgradeCost);
            }
            
            // –£–ª—É—á—à–∞–µ–º –∑–¥–∞–Ω–∏–µ
            printData.level++;
            printData.income = Math.floor(printData.income * 1.5);
            printData.upgradeCost = Math.floor(printData.upgradeCost * 2);
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
            savePrintData();
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            if (window.showNotification) {
                window.showNotification(`üèóÔ∏è –¢–∏–ø–æ–≥—Ä–∞—Ñ–∏—è —É–ª—É—á—à–µ–Ω–∞ –¥–æ —É—Ä–æ–≤–Ω—è ${printData.level}!`, 'success');
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞–Ω–µ–ª—å
            setTimeout(() => {
                openPrintPanel();
            }, 100);
        } else {
            if (window.showNotification) {
                window.showNotification('‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è!', 'error');
            }
        }
    }
    
    // === –°–ò–°–¢–ï–ú–ê –ü–ï–ß–ê–¢–ò ===
    function startPrint() {
        const playerMoney = window.getPlayerMoney ? window.getPlayerMoney() : 0;
        
        if (playerMoney >= PRINT_CONFIG.printCost) {
            // –°–ø–∏—Å—ã–≤–∞–µ–º –¥–µ–Ω—å–≥–∏
            if (window.setPlayerMoney) {
                window.setPlayerMoney(playerMoney - PRINT_CONFIG.printCost);
            }
            
            // –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–µ—á–∞—Ç–∏
            const printType = document.querySelector('input[name="print-type"]:checked').value;
            const quantity = parseInt(document.getElementById('print-quantity').value);
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–µ—á–∞—Ç–∏
            printData.isPrinting = true;
            printData.printStartTime = Date.now();
            printData.printTotalTime = PRINT_CONFIG.printTime * 60 * 1000;
            printData.isExpedited = false;
            printData.currentPrintType = printType;
            printData.currentPrintQuantity = quantity;
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
            savePrintData();
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            if (window.showNotification) {
                window.showNotification('üñ®Ô∏è –ü–µ—á–∞—Ç—å –Ω–∞—á–∞–ª–∞—Å—å!', 'success');
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞–Ω–µ–ª—å
            setTimeout(() => {
                openPrintPanel();
            }, 100);
        } else {
            if (window.showNotification) {
                window.showNotification('‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è –ø–µ—á–∞—Ç–∏!', 'error');
            }
        }
    }
    
    function expeditePrint() {
        const playerMoney = window.getPlayerMoney ? window.getPlayerMoney() : 0;
        
        if (playerMoney >= PRINT_CONFIG.expediteCost && printData.isPrinting && !printData.isExpedited) {
            // –°–ø–∏—Å—ã–≤–∞–µ–º –¥–µ–Ω—å–≥–∏
            if (window.setPlayerMoney) {
                window.setPlayerMoney(playerMoney - PRINT_CONFIG.expediteCost);
            }
            
            // –£—Å–∫–æ—Ä—è–µ–º –ø–µ—á–∞—Ç—å
            printData.isExpedited = true;
            printData.printTotalTime = PRINT_CONFIG.expediteTime * 60 * 1000;
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
            savePrintData();
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            if (window.showNotification) {
                window.showNotification('‚ö° –ü–µ—á–∞—Ç—å —É—Å–∫–æ—Ä–µ–Ω–∞!', 'success');
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞–Ω–µ–ª—å
            setTimeout(() => {
                openPrintPanel();
            }, 100);
        } else {
            if (window.showNotification) {
                window.showNotification('‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è!', 'error');
            }
        }
    }
    
    function startPrintSystem() {
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–µ—á–∞—Ç–∏ –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
        setInterval(() => {
            if (printData.isPrinting) {
                updatePrintProgress();
            }
        }, 1000);
    }
    
    function updatePrintProgress() {
        if (!printData.isPrinting) return;
        
        const currentTime = Date.now();
        const elapsed = currentTime - printData.printStartTime;
        const progress = Math.min(100, (elapsed / printData.printTotalTime) * 100);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
        const progressFill = document.getElementById('print-progress-fill');
        if (progressFill) {
            progressFill.style.width = progress + '%';
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è
        const timeLeft = document.getElementById('print-time-left');
        if (timeLeft) {
            const remaining = Math.max(0, printData.printTotalTime - elapsed);
            const minutes = Math.ceil(remaining / (60 * 1000));
            timeLeft.textContent = `${minutes} –º–∏–Ω.`;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø–µ—á–∞—Ç–∏
        if (elapsed >= printData.printTotalTime) {
            completePrint();
        }
    }
    
    function completePrint() {
        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã –≤ —Å–∫–ª–∞–¥
        if (printData.currentPrintType === 'books') {
            window.storedBooks = (window.storedBooks || 0) + printData.currentPrintQuantity;
        } else {
            window.storedMags = (window.storedMags || 0) + printData.currentPrintQuantity;
        }
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–µ—á–∞—Ç–∏
        printData.isPrinting = false;
        printData.printStartTime = 0;
        printData.isExpedited = false;
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
        savePrintData();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        if (window.showNotification) {
            window.showNotification(`‚úÖ –ü–µ—á–∞—Ç—å –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ü–æ–ª—É—á–µ–Ω–æ ${printData.currentPrintQuantity} ${printData.currentPrintType === 'books' ? '–∫–Ω–∏–≥' : '–∂—É—Ä–Ω–∞–ª–æ–≤'}`, 'success');
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞–Ω–µ–ª—å
        setTimeout(() => {
            openPrintPanel();
        }, 100);
    }
    
    // === –†–ê–°–ß–ï–¢ –ü–†–ò–ë–´–õ–ò ===
    function calculateAccumulatedProfit() {
        if (!printData.isOwned) return 0;
        
        const currentTime = Date.now();
        const timeDiff = currentTime - printData.lastCollectTime;
        const hoursPassed = timeDiff / (1000 * 60 * 60);
        
        // –ë–∞–∑–æ–≤—ã–π –¥–æ—Ö–æ–¥ –≤ —á–∞—Å —Å —É—á–µ—Ç–æ–º —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤
        const hourlyIncome = printData.income * (1 + printData.workers * PRINT_CONFIG.workerBonus);
        
        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—É—é –ø—Ä–∏–±—ã–ª—å
        const newProfit = hourlyIncome * hoursPassed;
        
        return Math.floor(printData.accumulatedProfit + newProfit);
    }
    
    // === –°–û–•–†–ê–ù–ï–ù–ò–ï –ò –ó–ê–ì–†–£–ó–ö–ê ===
    function savePrintData() {
        localStorage.setItem('printData', JSON.stringify(printData));
    }
    
    function loadPrintData() {
        const saved = localStorage.getItem('printData');
        if (saved) {
            const parsed = JSON.parse(saved);
            printData = { ...printData, ...parsed };
        }
    }
    
    // === –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ===
    function formatNumber(num) {
        if (num >= 1000000) {
            return (num / 1000000).toFixed(1) + 'M';
        } else if (num >= 1000) {
            return (num / 1000).toFixed(1) + 'k';
        }
        return num.toString();
    }
    
    function closePrintPanel() {
        const panel = document.getElementById('building-panel');
        if (panel) {
            panel.classList.remove('show');
            setTimeout(() => {
                if (panel.parentNode) {
                    panel.parentNode.removeChild(panel);
                }
            }, 300);
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        const mapContainer = document.getElementById('map-container');
        if (mapContainer) {
            mapContainer.style.display = 'block';
        }
    }
    
    // === –ì–õ–û–ë–ê–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ===
    window.initPrintBuilding = initPrintBuilding;
    window.buyPrint = buyPrint;
    window.collectPrintIncome = collectPrintIncome;
    window.upgradePrint = upgradePrint;
    window.closePrintPanel = closePrintPanel;
    window.startPrint = startPrint;
    window.expeditePrint = expeditePrint;
    window.openEmployeeAssignment = function(building) {
        if (window.openAssignOverlay) {
            window.openAssignOverlay(building);
        }
    };
    
    // === –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ===
    document.addEventListener('DOMContentLoaded', function() {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏—é –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
        setTimeout(initPrintBuilding, 100);
    });
    
})();

// Tasks Panel Swap - –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫
// –§–ª–∞–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ tasks-swap
let tasksSwapInitialized = false;

document.addEventListener('DOMContentLoaded', () => {
    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
    if (tasksSwapInitialized) {
        console.log('‚ö†Ô∏è Tasks swap already initialized, skipping...');
        return;
    }
    // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ —á—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å—Å—è —á—Ç–æ –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–∑ main.js –∑–∞–≥—Ä—É–∂–µ–Ω—ã
    setTimeout(() => {
        console.log('Tasks-swap.js: –ù–∞—á–∏–Ω–∞–µ–º –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤');
        
        // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∏–∂–Ω–µ–π –∫–Ω–æ–ø–∫–∏ "–ó–∞–¥–∞–Ω–∏—è" –±–µ–∑ –∑–∞–º–µ–Ω—ã —ç–ª–µ–º–µ–Ω—Ç–∞
        const bottomNavButton = document.querySelector('#bottom-nav button:nth-child(4)');
        if (bottomNavButton) {
            console.log('Tasks-swap.js: –ù–∞–π–¥–µ–Ω–∞ –Ω–∏–∂–Ω—è—è –∫–Ω–æ–ø–∫–∞ "–ó–∞–¥–∞–Ω–∏—è"');
            
            // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
            const newButton = bottomNavButton.cloneNode(true);
            bottomNavButton.parentNode.replaceChild(newButton, bottomNavButton);
            
            // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–∏–∂–Ω–µ–π –∫–Ω–æ–ø–∫–∏
            const newClickHandler = (e) => {
                console.log('Tasks-swap.js: –ö–ª–∏–∫ –ø–æ –Ω–∏–∂–Ω–µ–π –∫–Ω–æ–ø–∫–µ "–ó–∞–¥–∞–Ω–∏—è"');
                e.preventDefault();
                e.stopPropagation();
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ—Ç–∫—Ä—ã—Ç–∞ –ª–∏ —É–∂–µ –∫–∞–∫–∞—è-—Ç–æ –ø–∞–Ω–µ–ª—å
                const isAnyPanelOpen = () => {
                    const panels = [
                        'shop-panel',
                        'characters-panel', 
                        'city-panel',
                        'tasks-panel',
                        'profile-panel',
                        'friends-panel',
                        'phone-panel',
                        'game-tasks-panel'
                    ];
                    return panels.some(id => document.getElementById(id)?.style.display === 'flex');
                };
                
                if (isAnyPanelOpen()) return;
                
                // –°–∫—Ä—ã–≤–∞–µ–º –∫—Ä–∞—Å–Ω—ã–π –∫—Ä—É–∂–æ–∫ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –ø–æ—Å–µ—â–µ–Ω–∏–∏ –∏–≥—Ä–æ–≤—ã—Ö –∑–∞–¥–∞–Ω–∏–π
                const tasksFirstVisit = localStorage.getItem('tasksFirstVisit') === 'true';
                if (!tasksFirstVisit) {
                    localStorage.setItem('tasksFirstVisit', 'true');
                    
                    const tasksDot = document.getElementById('tasks-dot');
                    if (tasksDot) {
                        tasksDot.style.display = 'none';
                        console.log('üî¥ –ö—Ä–∞—Å–Ω—ã–π –∫—Ä—É–∂–æ—á–µ–∫ —Å –∑–∞–¥–∞–Ω–∏–π —É–±—Ä–∞–Ω (–∏–≥—Ä–æ–≤—ã–µ –∑–∞–¥–∞–Ω–∏—è)');
                    }
                }
                
                // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                if (window.setActiveNavButton) {
                    window.setActiveNavButton(4);
                }
                
                // –û—Ç–∫—Ä—ã–≤–∞–µ–º –Ω–æ–≤—É—é –ø–∞–Ω–µ–ª—å –∏–≥—Ä–æ–≤—ã—Ö –∑–∞–¥–∞–Ω–∏–π
                const gameTasksPanel = document.getElementById('game-tasks-panel');
                if (gameTasksPanel) {
                    console.log('Tasks-swap.js: –û—Ç–∫—Ä—ã–≤–∞–µ–º game-tasks-panel');
                    // –†–µ–Ω–¥–µ—Ä–∏–º –∏–≥—Ä–æ–≤—ã–µ –∑–∞–¥–∞–Ω–∏—è –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª—å
                    if (window.renderGameTasks) {
                        window.renderGameTasks();
                    }
                    if (window.showPanelWithAnimation) {
                        window.showPanelWithAnimation('game-tasks-panel');
                    } else {
                        gameTasksPanel.style.display = 'flex';
                    }
                } else {
                    console.error('Tasks-swap.js: game-tasks-panel –Ω–µ –Ω–∞–π–¥–µ–Ω');
                }
            };
            
            // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
            newButton.addEventListener('click', newClickHandler);
        } else {
            console.error('Tasks-swap.js: –ù–∏–∂–Ω—è—è –∫–Ω–æ–ø–∫–∞ "–ó–∞–¥–∞–Ω–∏—è" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        }
        
        // –ë–æ–∫–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞ btn-tasks —Ç–µ–ø–µ—Ä—å –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –ø–∞–Ω–µ–ª—å —Å –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏–º–∏ –∑–∞–¥–∞–Ω–∏—è–º–∏
        const btnTasks = document.getElementById('btn-tasks');
        const tasksPanel = document.getElementById('tasks-panel');
        
        if (btnTasks && tasksPanel) {
            console.log('Tasks-swap.js: –ù–∞–π–¥–µ–Ω–∞ –±–æ–∫–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞ btn-tasks');
            
            // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
            const newSideButton = btnTasks.cloneNode(true);
            btnTasks.parentNode.replaceChild(newSideButton, btnTasks);
            
            // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –±–æ–∫–æ–≤–æ–π –∫–Ω–æ–ø–∫–∏
            const sideButtonClickHandler = () => {
                console.log('Tasks-swap.js: –ö–ª–∏–∫ –ø–æ –±–æ–∫–æ–≤–æ–π –∫–Ω–æ–ø–∫–µ btn-tasks');
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ—Ç–∫—Ä—ã—Ç–∞ –ª–∏ —É–∂–µ –∫–∞–∫–∞—è-—Ç–æ –ø–∞–Ω–µ–ª—å
                const isAnyPanelOpen = () => {
                    const panels = [
                        'shop-panel',
                        'characters-panel', 
                        'city-panel',
                        'tasks-panel',
                        'profile-panel',
                        'friends-panel',
                        'phone-panel',
                        'game-tasks-panel'
                    ];
                    return panels.some(id => document.getElementById(id)?.style.display === 'flex');
                };
                
                if (isAnyPanelOpen()) return;
                
                // –°–∫—Ä—ã–≤–∞–µ–º –∫—Ä–∞—Å–Ω—ã–π –∫—Ä—É–∂–æ–∫ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –ø–æ—Å–µ—â–µ–Ω–∏–∏ –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏—Ö –∑–∞–¥–∞–Ω–∏–π
                const tasksFirstVisit = localStorage.getItem('tasksFirstVisit') === 'true';
                if (!tasksFirstVisit) {
                    localStorage.setItem('tasksFirstVisit', 'true');
                    
                    const tasksDot = document.getElementById('tasks-dot');
                    if (tasksDot) {
                        tasksDot.style.display = 'none';
                        console.log('üî¥ –ö—Ä–∞—Å–Ω—ã–π –∫—Ä—É–∂–æ—á–µ–∫ —Å –∑–∞–¥–∞–Ω–∏–π —É–±—Ä–∞–Ω (–ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è)');
                    }
                }
                
                // –†–µ–Ω–¥–µ—Ä–∏–º –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª—å
                if (window.renderPartnerTasks) {
                    window.renderPartnerTasks();
                }
                console.log('Tasks-swap.js: –û—Ç–∫—Ä—ã–≤–∞–µ–º tasks-panel');
                if (window.showPanelWithAnimation) {
                    window.showPanelWithAnimation('tasks-panel');
                } else {
                    tasksPanel.style.display = 'flex';
                }
                
                // –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –±–µ–ª—ã–º —Ü–≤–µ—Ç–æ–º
                if (window.setActiveSideButton) {
                    window.setActiveSideButton('btn-tasks');
                }
            };
            
            // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
            newSideButton.addEventListener('click', sideButtonClickHandler);
        } else {
            console.error('Tasks-swap.js: –ë–æ–∫–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞ btn-tasks –∏–ª–∏ tasks-panel –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
        }
        
        console.log('Tasks-swap.js: –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    }, 200); // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –¥–æ 200–º—Å
    
    tasksSwapInitialized = true;
    console.log('‚úÖ Tasks swap initialized');
}); 